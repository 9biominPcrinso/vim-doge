# ==============================================================================
# Tests the functionality for the g:doge_comment_todo_suffix option.
# ==============================================================================
Given php (function with parameters where g:doge_comment_todo_suffix = 1):
  public function myPublicMethod(array &$p1, \Test\Namespacing\With\A\ClassInterface $p2, int $p3, $p4, $p5 = NULL) {}

Do (trigger doge):
  \<C-d>

Expect php (generated comment with @param tags and with a TODO suffix for each parameter):
  /**
   * TODO
   *
   * @param array $p1 TODO
   * @param \Test\Namespacing\With\A\ClassInterface $p2 TODO
   * @param int $p3 TODO
   * @param mixed $p4 TODO
   * @param mixed $p5 TODO
   */
  public function myPublicMethod(array &$p1, \Test\Namespacing\With\A\ClassInterface $p2, int $p3, $p4, $p5 = NULL) {}

# ------------------------------------------------------------------------------

Given php (function with parameters where g:doge_comment_todo_suffix = 0):
  public function myPublicMethod(array &$p1, \Test\Namespacing\With\A\ClassInterface $p2, int $p3, $p4, $p5 = NULL) {}

Do (trigger doge):
  :let g:doge_comment_todo_suffix = 0\<CR>
  \<C-d>
  :let g:doge_comment_todo_suffix = 1\<CR>

Expect php (generated comment with @param tags and without a TODO suffix for each parameter):
  /**
   * TODO
   *
   * @param array $p1
   * @param \Test\Namespacing\With\A\ClassInterface $p2
   * @param int $p3
   * @param mixed $p4
   * @param mixed $p5
   */
  public function myPublicMethod(array &$p1, \Test\Namespacing\With\A\ClassInterface $p2, int $p3, $p4, $p5 = NULL) {}
