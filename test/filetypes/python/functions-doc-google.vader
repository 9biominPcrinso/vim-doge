# ==============================================================================
# Functions using the Google doc standard.
# ==============================================================================
Given python(function without paramters without return type where b:doge_doc_standard='google'):
  def myFunc():
      pass


Do (trigger doge):
  :let b:doge_doc_standard='google'\<CR>
  \<C-d>

Expect python (generated comment with nothing but the text 'TODO'):
  def myFunc():
      """TODO
      
      TODO
      """
      pass

# ------------------------------------------------------------------------------

Given python(function with parameters without return type where b:doge_doc_standard='google'):
  def myFunc(p1: Callable[[int], None] = False, p2: Callable[[int, Exception], None] = {}):
      pass

Do (trigger doge):
  :let b:doge_doc_standard='google'\<CR>
  \<C-d>

Expect python (generated comment with :param tags):
  def myFunc(p1: Callable[[int], None] = False, p2: Callable[[int, Exception], None] = {}):
      """TODO
      
      TODO
      
      Args:
          p1: TODO
          p2: TODO
      """
      pass

# ------------------------------------------------------------------------------

Given python(function with parameters with return type where b:doge_doc_standard='google'):
  def myFunc(p1: Callable[[int], None] = False, p2: Callable[[int, Exception], None] = {}) -> Sequence[T]:
      pass

Do (trigger doge):
  :let b:doge_doc_standard='google'\<CR>
  \<C-d>

Expect python (generated comment with :param tags):
  def myFunc(p1: Callable[[int], None] = False, p2: Callable[[int, Exception], None] = {}) -> Sequence[T]:
      """TODO
      
      TODO
      
      Args:
          p1: TODO
          p2: TODO
      
      Returns:
          TODO
      """
      pass
