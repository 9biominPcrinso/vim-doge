name: release
on:
  create:
    tags:
      - '!v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+'

jobs:
  create_release:
    name: create_release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output release url file
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save release url file for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build_and_upload_assets:
    needs: [create_release]
    name: Build and upload binary assets
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on : ${{ matrix.os }}
    env:
      NODE_VERSION: 14
      TARGET: $(echo $RUNNER_OS | tr '[:upper:]' '[:lower:]')
      ASSET_FILENAME: vim-doge-$(echo $RUNNER_OS | tr '[:upper:]' '[:lower:]')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup nodejs
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install
      - name: Build binary
        run: npm run build:binary -- node${{ env.NODE_VERSION }}-${{ env.TARGET }}-x64 ${{ env.ASSET_FILENAME }}
      - name: Load release url file from create_release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get release upload url
        id: release_info
        run: |
          url=$(cat release_url/release_url.txt)
          echo ::set-output name=upload_url::$url
          echo ::set-output name=asset_path::./bin/${{ env.ASSET_FILENAME }}.tar.gz
          echo ::set-output name=asset_name::${{ env.ASSET_FILENAME }}.tar.gz
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_info.outputs.upload_url }}
          asset_path: ${{ steps.release_info.outputs.asset_path }}
          asset_name: ${{ steps.release_info.outputs.asset_name }}
          asset_content_type: application/zip
